generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Board {
  id            String   @id @default(uuid())
  orgId         String
  title         String
  imageId       String
  imageThumbUrl String   @db.Text
  imageFullUrl  String   @db.Text
  imageUserName String   @db.Text
  imageLinkHTML String   @db.Text
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  lists         List[]
}

model List {
  id           String   @id @default(uuid())
  title        String
  order        Int
  boardId      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  cards        Card[]
  board        Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)

  @@index([boardId])
}

model Card {
  id           String    @id @default(uuid())
  title        String
  order        Int
  description  String?   @db.Text

  deadline     String? 

  listId       String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  subCards     SubCard[]

  list         List      @relation(fields: [listId], references: [id], onDelete: Cascade)

  @@index([listId])
}

model SubCard {
  id          String   @id @default(uuid())
  title       String
  order       Int
  priority    String?
  cardId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  card        Card     @relation(fields: [cardId], references: [id], onDelete: Cascade)

  @@index([cardId])
}

enum ACTIONS {
  CREATE
  UPDATE
  DELETE
}

enum ENTITY_TYPE{
  BOARD
  LIST
  CARD
}

model AuditLog {
  id          String @id @default(uuid())
  orgId       String
  action      ACTIONS
  entityId    String
  entityType  ENTITY_TYPE
  entityTitle String
  userId      String
  userImage   String @db.Text
  userName    String @db.Text

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
